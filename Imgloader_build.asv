function [fig_hdl,handles] = Imgloader_build


% Initialize handles structure
global handles;
handles = struct();

% Suppress warnings about global and local variables being changed


% Create all UI controls
build_gui();
% Assign function output
fig_hdl = handles.figure1;


%% ---------------------------------------------------------------------------
function build_gui()
    
    lp_adj = 5;
    
% Creation of all uicontrols

		% --- FIGURE -------------------------------------
		handles.figure1 = figure( ...
			'Tag', 'figure1', ...
			'Units', 'characters', ...
			'Position', [50 10 200 60], ...
			'Name', 'Imgloader', ...
			'MenuBar', 'none', ...
			'NumberTitle', 'off', ...
			'Color', get(0,'DefaultUicontrolBackgroundColor'));

		% --- PANELS -------------------------------------
		handles.loadpanel = uipanel( ...
			'Parent', handles.figure1, ...
			'Tag', 'loadpanel', ...
			'Units', 'characters', ...
			'Position', [2 0 32 25], ...
			'FontName', 'Helvetica', ...
			'FontSize', 14, ...
			'Title', 'Image loading');

        handles.plotpanel = uipanel( ...
			'Parent', handles.figure1, ...
			'Tag', 'displaypanel', ...
			'Units', 'characters', ...
			'Position', [2 25 64 34], ...
			'FontName', 'Helvetica', ...
			'FontSize', 14, ...
			'Title', 'Display', ...
            'Visible', 'on');
         
        
		% --- STATIC TEXTS -------------------------------------
		handles.trunctext = uicontrol( ...
			'Parent', handles.loadpanel, ...
			'Tag', 'text4', ...
			'Style', 'text', ...
			'Units', 'characters', ...
			'Position', [2 14+lp_adj 18 1.25], ...
            'HorizontalAlignment', 'left',...
			'FontName', 'Helvetica', ...
			'FontSize', 10, ...
			'String', 'Truncate');		
        
        handles.text4 = uicontrol( ...
			'Parent', handles.loadpanel, ...
			'Tag', 'text4', ...
			'Style', 'text', ...
			'Units', 'characters', ...
			'Position', [2 10+lp_adj 18 1.25], ...
            'HorizontalAlignment', 'left',...
			'FontName', 'Helvetica', ...
			'FontSize', 10, ...
			'String', 'Z slices per frame');		
        
        handles.text4 = uicontrol( ...
			'Parent', handles.loadpanel, ...
			'Tag', 'text4', ...
			'Style', 'text', ...
			'Units', 'characters', ...
			'Position', [2 6+lp_adj 18 1.25], ...
            'HorizontalAlignment', 'left',...
			'FontName', 'Helvetica', ...
			'FontSize', 10, ...
			'String', 'Z slices per frame');
        
		handles.text9 = uicontrol( ...
			'Parent', handles.loadpanel, ...
			'Tag', 'text9', ...
			'Style', 'text', ...
			'Units', 'characters', ...
			'Position', [2 2+lp_adj 16 1.25], ...
            'HorizontalAlignment', 'left',...            
			'FontName', 'Helvetica', ...
			'FontSize', 10, ...
			'String', 'Pixel size (nm)');
        
        handles.target_Text = uicontrol( ...
			'Parent', handles.loadpanel, ...
			'Tag', 'text9', ...
			'Style', 'text', ...
			'Units', 'characters', ...
			'Position', [2 lp_adj 16 1.25], ...
            'HorizontalAlignment', 'left',...            
			'FontName', 'Helvetica', ...
			'FontSize', 10, ...
			'String', 'Filename');

		handles.text10 = uicontrol( ...
			'Parent', handles.plotpanel, ...
			'Tag', 'text9', ...
			'Style', 'text', ...
			'Units', 'characters', ...
			'Position', [2 0 16 1.25], ...
			'FontName', 'Helvetica', ...
			'FontSize', 10, ...
			'String', 'Frame');

        handles.FrameStepText = uicontrol( ...
			'Parent', handles.plotpanel, ...
			'Tag', 'FrameStepText', ...
			'Style', 'text', ...
			'Units', 'characters', ...
			'Position', [46 0 16 1.25], ...
			'FontName', 'Helvetica', ...
			'FontSize', 10, ...
			'String', '0');
        
        handles.micronstext = uicontrol( ...
			'Parent', handles.loadpanel, ...
			'Tag', 'micronstext', ...
			'Style', 'text', ...
			'Units', 'characters', ...
			'Position', [2 4+lp_adj 16 4], ...
			'FontName', 'Helvetica', ...
			'FontSize', 10, ...
            'HorizontalAlignment', 'left',...
			'String', 'Bit depth');
        
		% --- PUSHBUTTONS -------------------------------------
		handles.pb_imload = uicontrol( ...
			'Parent', handles.loadpanel, ...
			'Tag', 'pb_imload', ...
			'Style', 'pushbutton', ...
			'Units', 'characters', ...
			'Position', [2 -4+lp_adj 18 3], ...
			'FontName', 'Helvetica', ...
			'FontSize', 10, ...
			'String', 'Load images', ...
			'Callback', @pb_imload_Callback);
        
       
		% --- EDIT TEXTS -------------------------------------
        handles.tb_trunc = uicontrol( ...
			'Parent', handles.loadpanel, ...
			'Tag', 'tb_trunc', ...
			'Style', 'edit', ...
			'Units', 'characters', ...
			'Position', [21 14+lp_adj 4.5 2], ...
			'FontName', 'Helvetica', ...
			'FontSize', 10, ...
			'String', '0');
        
		handles.tb_zdepth = uicontrol( ...
			'Parent', handles.loadpanel, ...
			'Tag', 'tb_zdepth', ...
			'Style', 'edit', ...
			'Units', 'characters', ...
			'Position', [21 10+lp_adj 4.5 2], ...
			'FontName', 'Helvetica', ...
			'FontSize', 10, ...
			'String', '5', ...
			'Callback', @tb_zdepth_Callback);

		handles.tb_bitdepth = uicontrol( ...
			'Parent', handles.loadpanel, ...
			'Tag', 'tb_bitdepth', ...
			'Style', 'edit', ...
			'Units', 'characters', ...
			'Position', [21 6+lp_adj 4.5 2], ...
			'FontName', 'Helvetica', ...
			'FontSize', 10, ...
			'String', '12');

        handles.tb_pixelsize = uicontrol( ...
			'Parent', handles.loadpanel, ...
			'Tag', 'tb_pixelsize', ...
			'Style', 'edit', ...
			'Units', 'characters', ...
			'Position', [21 2+lp_adj 4.5 2], ...
			'FontName', 'Helvetica', ...
			'FontSize', 10, ...
			'String', '80');

        handles.tb_target = uicontrol( ...
			'Parent', handles.loadpanel, ...
			'Tag', 'tb_target', ...
			'Style', 'edit', ...
			'Units', 'characters', ...
			'Position', [21 lp_adj 9 1.25], ...
            'HorizontalAlignment', 'left',...            
			'FontName', 'Helvetica', ...
			'FontSize', 10, ...
			'String', '');

		% --- TOOLBAR -------------------------------------
		handles.uitoolbar1 = uitoolbar( ...
			'Parent', handles.figure1, ...
			'Tag', 'uitoolbar1');

		% --- TOGGLE TOOLS -------------------------------------
		handles.uitoggletool1 = uitoggletool( ...
			'Parent', handles.uitoolbar1, ...
			'Tag', 'uitoggletool1', ...
			'TooltipString', 'Pan', ...
            'ClickedCallback', @uitoggletool1_ClickedCallback);

		handles.uitoggletool2 = uitoggletool( ...
			'Parent', handles.uitoolbar1, ...
			'Tag', 'uitoggletool2', ...
			'TooltipString', 'Zoom In', ...
            'ClickedCallback', @uitoggletool2_ClickedCallback);

		handles.uitoggletool3 = uitoggletool( ...
			'Parent', handles.uitoolbar1, ...
			'Tag', 'uitoggletool3', ...
			'TooltipString', 'Zoom Out', ...
            'ClickedCallback', @uitoggletool3_ClickedCallback);

		handles.uitoggletool4 = uitoggletool( ...
			'Parent', handles.uitoolbar1, ...
			'Tag', 'uitoggletool4', ...
			'TooltipString', 'Data Cursor', ...
			'ClickedCallback', @uitoggletool4_ClickedCallback);

        
	end

%% ---------------------------------------------------------------------------
    function pb_imload_Callback(hObject,eventdata,varargin) 
        
        global datestr
        global c
        
        c = fix(clock);
        datestr = strcat(num2str(c(2)),'-',num2str(c(3)),'-',num2str(c(1)),'-',num2str(c(4)),num2str(c(5)));
        
        
        try
            
        cla(handles.axes11,'reset')
        set(handles.axes11,'Visible','off')
       
        end
        


            
        handles.zdepth = str2double(get(handles.tb_zdepth,{'string'}));
        handles.bitdepth = cell2mat(get(handles.tb_bitdepth,{'string'}));
        handles.trunc = str2double(get(handles.tb_trunc,{'string'}));
            
        if isempty(cell2mat(get(handles.tb_target,{'string'})))==1
            tmp_target = 'tif';
        else
            tmp_target = cell2mat(get(handles.tb_target,{'string'}));
        end
        
        [handles.rawimages, handles.fname] = GUIloadimgs('bitdepth',handles.bitdepth,'target',tmp_target);
        
        set(handles.figure1,'Name',handles.fname);
        handles.imagetype = 'rawimages';
        
        if handles.zdepth > 1

            
        % Truncate images if there isn't a z at every frame
        
        handles.rawimages = handles.rawimages(:,:,[1+handles.zdepth*handles.trunc:end]);
        handles.rawimages = handles.rawimages(:,:,1:size(handles.rawimages,3)-mod(size(handles.rawimages,3),handles.zdepth));
        
        
            for i = 1:size(handles.rawimages,3)/handles.zdepth
            handles.maximages(:,:,i) = (max(handles.rawimages(:,:,[1+(i-1)*handles.zdepth:i*handles.zdepth]),[],3));
            %fprintf('Max from %1.0f to %1.0f\n',[1+(i-1)*handles.zdepth],[i*handles.zdepth])
            end
            
            handles.imagetype = 'maximages';
        
        end
            
        handles.frames = size(handles.(handles.imagetype),3);
        pb_imload_makeappear();
       
        set(handles.slider,'max',size(handles.(handles.imagetype),3))
        set(handles.pb_imload,'Visible','off');
        imshow(handles.(handles.imagetype)(:,:,1),'Parent',handles.axes11)
        
        
        % Below is the default index for the z-slices
        % If the images are not checked for z-shift, this is the index that
        % is used for the X-Y shift registration
            
        
        for i =  1:handles.zdepth
            handles.index(:,i) = i:handles.zdepth:size(handles.rawimages,3);
        end

        assignin('base',sprintf('rawimages%s',strcat(num2str(c(4)),num2str(c(5)))),handles.rawimages);
        assignin('base',sprintf('filename%s',strcat(num2str(c(4)),num2str(c(5)))),handles.fname);
    end

%% ---------------------------------------------------------------------------

    function pb_imload_makeappear()
        
        %global handles
        handles.FrameStep = 1;
        anp_adj = 10;
        sp_adj = 5;
        lp_adj = 0;
        
        set(handles.figure1,'WindowKeyPressFcn',@fig_kpfcn);
        % --- PUNCTA COUNT BUTTON ----------------------
        
        handles.pb_countpuncta = uicontrol( ...
			'Parent', handles.loadpanel, ...
			'Tag', 'pb_countpuncta', ...
			'Style', 'pushbutton', ...
			'Units', 'characters', ...
			'Position', [2 2+lp_adj 18 3], ...
			'FontName', 'Helvetica', ...
			'FontSize', 10, ...
			'String', 'Count Puncta', ...
			'Callback', @pb_countpuncta_Callback);
        

        % --- AXES -------------------------------------
		handles.axes11 = axes( ...
			'Parent', handles.plotpanel, ...
			'Tag', 'axes11', ...
			'Units', 'characters', ...
			'Position', [0.5 2 60 28], ...
            'xtick',[], ...
            'ytick',[], ...
            'box','on');
        

        % --- SLIDER CONTROLS -------------------------------------
        handles.slider = uicontrol(...
			'Parent', handles.plotpanel, ...
			'Tag', 'slider', ...
            'style','slide',...
            'units','characters',...
            'position',[0.5 0.5 60 1],...
            'min',1,'value',1,'max',60,...
            'callback',{@sl_call},...
            'visible','off');
        
        % --- NEW PANELS -------------------------------------
        handles.shiftcorrpanel = uipanel( ...
			'Parent', handles.figure1, ...
			'Tag', 'shiftcorrpanel', ...
			'Units', 'characters', ...
			'Position', [34 0 32 25], ...
			'FontName', 'Helvetica', ...
			'FontSize', 14, ...
			'Title', 'Shift correction', ...
        'Visible','on');

		handles.analysispanel = uipanel( ...
			'Parent', handles.figure1, ...
			'Tag', 'analysispanel', ...
			'Units', 'characters', ...
			'Position', [66 0 130 25], ...
			'FontName', 'Helvetica', ...
			'FontSize', 14, ...
			'Title', 'Analyze', ...
            'Visible', 'on');
        
        % --- NEW PUSHBUTTONS -------------------------------------
        handles.tb_zstart = uicontrol( ...
			'Parent', handles.shiftcorrpanel, ...
			'Tag', 'tb_zstart', ...
			'Style', 'edit', ...
			'Units', 'characters', ...
			'Position', [13 sp_adj+12 6 2.25], ...
			'FontName', 'Helvetica', ...
			'FontSize', 10, ...
			'String', '1', ...
            'Visible', 'off');
        
         handles.tb_zend = uicontrol( ...
			'Parent', handles.shiftcorrpanel, ...
			'Tag', 'tb_zend', ...
			'Style', 'edit', ...
			'Units', 'characters', ...
			'Position', [13 sp_adj+9 6 2.25], ...
			'FontName', 'Helvetica', ...
			'FontSize', 10, ...
			'String', '1', ...
            'Visible', 'off');
        
        if handles.zdepth > 1
            
        handles.pb_zshift = uicontrol( ...
			'Parent', handles.shiftcorrpanel, ...
			'Tag', 'pb_zshift', ...
			'Style', 'pushbutton', ...
			'Units', 'characters', ...
			'Position', [2 sp_adj+14 18 3], ...
			'FontName', 'Helvetica', ...
			'FontSize', 8, ...
			'String', 'Measure Z-Shift', ...
			'Callback', @pb_zshift_Callback);
        
        handles.startslicetext = uicontrol( ...
			'Parent', handles.shiftcorrpanel, ...
			'Tag', 'text13', ...
			'Style', 'text', ...
			'Units', 'characters', ...
			'Position', [1 sp_adj+12 10 1.25], ...
			'FontName', 'Helvetica', ...
			'FontSize', 10, ...
			'String', 'Start slice:');
        
        handles.endslicetext = uicontrol( ...
			'Parent', handles.shiftcorrpanel, ...
			'Tag', 'text13', ...
			'Style', 'text', ...
			'Units', 'characters', ...
			'Position', [1 sp_adj+10 10 1.25], ...
			'FontName', 'Helvetica', ...
			'FontSize', 10, ...
			'String', 'End slice:');
        
        set(handles.tb_zstart,'Visible','on');
        set(handles.tb_zend,'Visible','on');
        
        end
        

		handles.pb_reg = uicontrol( ...
			'Parent', handles.shiftcorrpanel, ...
			'Tag', 'pb_reg', ...
			'Style', 'pushbutton', ...
			'Units', 'characters', ...
			'Position', [2 sp_adj+6 18 3], ...
			'FontName', 'Helvetica', ...
			'FontSize', 8, ...
			'String', 'Register in X-Y', ...
			'Callback', @pb_reg_Callback);
        

        
        handles.pb_anl = uicontrol( ...
			'Parent', handles.analysispanel, ...
			'Tag', 'pb_anl', ...
			'Style', 'pushbutton', ...
			'Units', 'characters', ...
			'Position', [2 1 10.5 3], ...
			'FontName', 'Helvetica', ...
			'FontSize', 10, ...
			'String', 'Analyze', ...
			'Callback', @pb_anl_Callback);
 
        
        
               
        
        % --- NEW TEXTBOXES -------------------------------------
        
        handles.tb_begin = uicontrol( ...
			'Parent', handles.analysispanel, ...
			'Tag', 'tb_begin', ...
			'Style', 'edit', ...
			'Units', 'characters', ...
			'Position', [32 10+anp_adj 4.5 2], ...
			'FontName', 'Helvetica', ...
			'FontSize', 10, ...
			'String', '1');
        
        handles.tb_end = uicontrol( ...
			'Parent', handles.analysispanel, ...
			'Tag', 'tb_end', ...
			'Style', 'edit', ...
			'Units', 'characters', ...
			'Position', [32 7.5+anp_adj 4.5 2], ...
			'FontName', 'Helvetica', ...
			'FontSize', 10, ...
			'String', handles.frames);
        
		handles.tb_startstim = uicontrol( ...
			'Parent', handles.analysispanel, ...
			'Tag', 'tb_startstim', ...
			'Style', 'edit', ...
			'Units', 'characters', ...
			'Position', [32 5+anp_adj 4.5 2], ...
			'FontName', 'Helvetica', ...
			'FontSize', 10, ...
			'String', '20');
        
        handles.tb_maskmin = uicontrol( ...
			'Parent', handles.analysispanel, ...
			'Tag', 'tb_maskmin', ...
			'Style', 'edit', ...
			'Units', 'characters', ...
			'Position', [70 10+anp_adj 8 2], ...
			'FontName', 'Helvetica', ...
			'FontSize', 10, ...
			'String', '100');

		handles.tb_maskmax = uicontrol( ...
			'Parent', handles.analysispanel, ...
			'Tag', 'tb_maskmax', ...
			'Style', 'edit', ...
			'Units', 'characters', ...
			'Position', [70 7.5+anp_adj 8 2], ...
			'FontName', 'Helvetica', ...
			'FontSize', 10, ...
			'String', '800');

		handles.tb_icut = uicontrol( ...
			'Parent', handles.analysispanel, ...
			'Tag', 'tb_icut', ...
			'Style', 'edit', ...
			'Units', 'characters', ...
			'Position', [70 5+anp_adj 4.5 2], ...
			'FontName', 'Helvetica', ...
			'FontSize', 10, ...
			'String', '2');
        
        handles.tb_pcabegin = uicontrol( ...
			'Parent', handles.analysispanel, ...
			'Tag', 'tb_pcabegin', ...
			'Style', 'edit', ...
			'Units', 'characters', ...
			'Position', [120 10+anp_adj 4.5 2], ...
			'FontName', 'Helvetica', ...
			'FontSize', 10, ...
			'String', '1');
        
        handles.tb_pcaend = uicontrol( ...
			'Parent', handles.analysispanel, ...
			'Tag', 'bg_pcaend', ...
			'Style', 'edit', ...
			'Units', 'characters', ...
			'Position', [120 7.5+anp_adj 4.5 2], ...
			'FontName', 'Helvetica', ...
			'FontSize', 10, ...
			'String', '40');
        
        handles.tb_pcas = uicontrol( ...
			'Parent', handles.analysispanel, ...
			'Tag', 'bg_pcas', ...
			'Style', 'edit', ...
			'Units', 'characters', ...
			'Position', [120 5+anp_adj 4.5 2], ...
			'FontName', 'Helvetica', ...
			'FontSize', 10, ...
			'String', '1');
                
		handles.tb_kgroups = uicontrol( ...
			'Parent', handles.analysispanel, ...
			'Tag', 'tb_kgroups', ...
			'Style', 'edit', ...
			'Units', 'characters', ...
			'Position', [120 2.5+anp_adj 4.5 2], ...
			'FontName', 'Helvetica', ...
			'FontSize', 10, ...
			'String', '2');
        
        handles.tb_masklife = uicontrol( ...
			'Parent', handles.analysispanel, ...
			'Tag', 'tb_masklife', ...
			'Style', 'edit', ...
			'Units', 'characters', ...
			'Position', [120 anp_adj 4.5 2], ...
			'FontName', 'Helvetica', ...
			'FontSize', 10, ...
			'String', '2');
        
        handles.tb_dropcriteria = uicontrol( ...
			'Parent', handles.analysispanel, ...
			'Tag', 'tb_dropcriteria', ...
			'Style', 'edit', ...
			'Units', 'characters', ...
			'Position', [70 2.5+anp_adj 4.5 2], ...
			'FontName', 'Helvetica', ...
			'FontSize', 10, ...
			'String', '35');
        
        handles.tb_dropstart = uicontrol( ...
			'Parent', handles.analysispanel, ...
			'Tag', 'tb_dropinterval', ...
			'Style', 'edit', ...
			'Units', 'characters', ...
			'Position', [70 anp_adj 4.5 2], ...
			'FontName', 'Helvetica', ...
			'FontSize', 10, ...
			'String', '21');
        
        handles.tb_dropend = uicontrol( ...
			'Parent', handles.analysispanel, ...
			'Tag', 'tb_dropinterval', ...
			'Style', 'edit', ...
			'Units', 'characters', ...
			'Position', [75 anp_adj 4.5 2], ...
			'FontName', 'Helvetica', ...
			'FontSize', 10, ...
			'String', '60');
        
        % --- NEW POP-UPS -------------------------------------

        handles.pu_anlmethod = uicontrol( ...
                'Parent', handles.analysispanel, ...
                'Tag', 'pu_anlmethod', ...
                'Style', 'popupmenu', ...
                'Units', 'characters', ...
                'Position', [20 2.5+anp_adj 16 2], ...
                'FontName', 'Helvetica', ...
                'FontSize', 9.99999999999967, ...
                'String', {'Drop','IQ'});


        handles.ch_corrcheck = uicontrol('style','check',...
                 'parent',handles.analysispanel, ...
                 'units','characters',...
                 'position',[2.5 -2.5+anp_adj 27.5 1.25],...
                 'fontname', 'Helvetica',...
                 'string','Correlation check',...
                 'fontsize',10);
             
        handles.ch_xlsave = uicontrol('style','check',...
                 'parent',handles.analysispanel, ...
                 'units','characters',...
                 'position',[2.5 -4.5+anp_adj 27.5 1.25],...
                 'fontname', 'Helvetica',...
                 'string','Save to Excel File',...
                 'Callback', @ch_xlsave_Callback, ...
                 'fontsize',10);
             
        handles.ch_bgremove = uicontrol('style','check',...
                 'parent',handles.analysispanel, ...
                 'units','characters',...
                 'position',[28 -2.5+anp_adj 27.5 1.25],...
                 'fontname', 'Helvetica',...
                 'string','Subtract background',...
                 'value',1,...
                 'fontsize',10);
             
        handles.ch_blineremove = uicontrol('style','check',...
                 'parent',handles.analysispanel, ...
                 'units','characters',...
                 'position',[28 -4.5+anp_adj 27.5 1.25],...
                 'fontname', 'Helvetica',...
                 'string','Baseline correct',...
                 'value',1,...
                 'fontsize',10);
        
        % --- JUST TEXT -------------------------------------
        
        handles.beginframetext = uicontrol( ...
			'Parent', handles.analysispanel, ...
			'Tag', 'beginframetext', ...
			'Style', 'text', ...
			'Units', 'characters', ...
			'Position', [2.5 9+anp_adj 27.5 2], ...
            'HorizontalAlignment', 'left',...
			'FontName', 'Helvetica', ...
			'FontSize', 10, ...
			'String', 'Start frame');
        
        handles.endframetext = uicontrol( ...
			'Parent', handles.analysispanel, ...
			'Tag', 'endframetext', ...
			'Style', 'text', ...
			'Units', 'characters', ...
			'Position', [2.5 7+anp_adj 27.5 2], ...
            'HorizontalAlignment', 'left',...
			'FontName', 'Helvetica', ...
			'FontSize', 10, ...
			'String', 'End frame');

		handles.firstframestim = uicontrol( ...
			'Parent', handles.analysispanel, ...
			'Tag', 'text15', ...
			'Style', 'text', ...
			'Units', 'characters', ...
			'Position', [2.5 5+anp_adj 27.5 1.25], ...
            'HorizontalAlignment', 'left',...
			'FontName', 'Helvetica', ...
			'FontSize', 10, ...
			'String', 'Last Baseline Pt');

        handles.methodtext = uicontrol( ...
			'Parent', handles.analysispanel, ...
			'Tag', 'methodtext', ...
			'Style', 'text', ...
			'Units', 'characters', ...
			'Position', [2.5 2.5+anp_adj 15 1.25], ...
            'HorizontalAlignment', 'left',...
			'FontName', 'Helvetica', ...
			'FontSize', 10, ...
			'String', 'Method:');

		handles.maskmintext = uicontrol( ...
			'Parent', handles.analysispanel, ...
			'Tag', 'text11', ...
			'Style', 'text', ...
			'Units', 'characters', ...
			'Position', [40 10+anp_adj 27.5 1.25], ...
			'FontName', 'Helvetica', ...
            'HorizontalAlignment', 'left',...
			'FontSize', 10, ...
			'String', 'Mask Min Diameter (nm)');

		handles.maskmaxtext = uicontrol( ...
			'Parent', handles.analysispanel, ...
			'Tag', 'text12', ...
			'Style', 'text', ...
			'Units', 'characters', ...
			'Position', [40 7.5+anp_adj 27.5 1.25], ...
            'HorizontalAlignment', 'left',...
			'FontName', 'Helvetica', ...
			'FontSize', 10, ...
			'String', 'Mask Max Diameter (nm)');

		handles.icuttext = uicontrol( ...
			'Parent', handles.analysispanel, ...
			'Tag', 'text14', ...
			'Style', 'text', ...
			'Units', 'characters', ...
			'Position', [40 5+anp_adj 27.5 1.25], ...
			'FontName', 'Helvetica', ...
            'HorizontalAlignment', 'left',...
			'FontSize', 10, ...
			'String', 'Intensity Cut-off (max)');
        
        handles.dropcriteriatext = uicontrol( ...
			'Parent', handles.analysispanel, ...
			'Tag', 'text14', ...
			'Style', 'text', ...
			'Units', 'characters', ...
			'Position', [40 2.5+anp_adj 27.5 1.25], ...
			'FontName', 'Helvetica', ...
            'HorizontalAlignment', 'left',...
			'FontSize', 10, ...
			'String', 'Drop Criteria');
        
        handles.intervaltext = uicontrol( ...
			'Parent', handles.analysispanel, ...
			'Tag', 'text14', ...
			'Style', 'text', ...
			'Units', 'characters', ...
			'Position', [40 anp_adj 27.5 1.25], ...
			'FontName', 'Helvetica', ...
            'HorizontalAlignment', 'left',...
			'FontSize', 10, ...
			'String', 'Interval');

       handles.pcabegintext = uicontrol( ...
			'Parent', handles.analysispanel, ...
            'Tag', 'beginpcatext', ...
			'Style', 'text', ...
			'Units', 'characters', ...
			'Position', [80 10+anp_adj 27.5 2], ...
            'HorizontalAlignment', 'left',...
            'FontName', 'Helvetica', ...
            'HorizontalAlignment','left',...
			'FontSize', 10, ...
			'String', 'Start PCA');
        
       handles.pcaendtext = uicontrol( ...
			'Parent', handles.analysispanel, ...
			'Tag', 'endpcatext', ...
			'Style', 'text', ...
			'Units', 'characters', ...
			'Position', [80 7.5+anp_adj 27.5 2], ...
            'HorizontalAlignment', 'left',...
			'FontName', 'Helvetica', ...
			'FontSize', 10, ...
			'String', 'End PCA');
        
        handles.pcastext = uicontrol( ...
			'Parent', handles.analysispanel, ...
			'Tag', 'endpcatext', ...
			'Style', 'text', ...
			'Units', 'characters', ...
			'Position', [80 5+anp_adj 27.5 2], ...
            'HorizontalAlignment', 'left',...
			'FontName', 'Helvetica', ...
			'FontSize', 10, ...
			'String', '# of PCs');
                
		handles.kgrouptext = uicontrol( ...
			'Parent', handles.analysispanel, ...
			'Tag', 'text16', ...
			'Style', 'text', ...
			'Units', 'characters', ...
			'Position', [80 2.5+anp_adj 27.5 1.25], ...
            'HorizontalAlignment', 'left',...
			'FontName', 'Helvetica', ...
			'FontSize', 10, ...
			'String', 'K-means groups');
        
         handles.masklifetext = uicontrol( ...
			'Parent', handles.analysispanel, ...
			'Tag', 'text16', ...
			'Style', 'text', ...
			'Units', 'characters', ...
			'Position', [80 anp_adj 27.5 1.25], ...
            'HorizontalAlignment', 'left',...
			'FontName', 'Helvetica', ...
			'FontSize', 10, ...
			'String', 'Mask Life');

        
        
        
 
    end

%% ---------------------------------------------------------------------------
	function pb_zshift_Callback(varargin)

        handles.index = GUImeasureshiftFFT(handles.rawimages,handles.zdepth);
      
	end

%% ---------------------------------------------------------------------------
	function pb_reg_Callback(varargin)
        
        global c
        
        cla(handles.axes11,'reset')

        trackopts = 'Images';
        
        
        zstart = str2num(cell2mat(get(handles.tb_zstart,{'string'})))
        zend = str2num(cell2mat(get(handles.tb_zend,{'string'})))
        
        if strcmp(trackopts,'Images')==1

[handles.regimages] = GUIdftregister(handles.rawimages,'index',handles.index(:,[zstart:zend]),'zdepth',handles.zdepth);
        
        else if strcmp(trackopts,'Masks')==1
        
            [handles.regimages, handles.thrimmax] = GUIdftregister(handles.rawimages,'index',handles.index,'zdepth',handles.zdepth);

            end
            
        end
        
        handles.imagetype = 'regimages';
        handles.RegFrameStep = 1;
        
        imshow(handles.regimages(:,:,handles.RegFrameStep),'Parent',handles.axes11);
        set(handles.FrameStepText,'string',num2str(handles.RegFrameStep));
        set(handles.plotpanel,'Title','Registered Image');
        
        handles.pb_showmov = uicontrol( ...
			'Parent', handles.shiftcorrpanel, ...
			'Tag', 'pb_showmov', ...
			'Style', 'pushbutton', ...
			'Units', 'characters', ...
			'Position', [2 2 18 3], ...
			'FontName', 'Helvetica', ...
			'FontSize', 10, ...
			'String', 'Play Movie', ...
			'Callback', @pb_showmov_Callback);
        
        handles.pb_demo = uicontrol( ...
			'Parent', handles.analysispanel, ...
			'Tag', 'pb_demo', ...
			'Style', 'pushbutton', ...
			'Units', 'characters', ...
			'Position', [23 1 14 3], ...
			'FontName', 'Helvetica', ...
			'FontSize', 10, ...
			'String', 'Play Demo', ...
			'Callback', @pb_demo_Callback);
        
        handles.xdim = size(handles.regimages,1);
        handles.ydim = size(handles.regimages,2);
        assignin('base',sprintf('regimages%s',strcat(num2str(c(4)),num2str(c(5)))),handles.regimages);
        
        assignin('base',sprintf('regindex%s',strcat(num2str(c(4)),num2str(c(5)))),handles.index(:,[zstart:zend]));
       [handles.regimages, xshift, yshift] = GUIdftregister(handles.rawimages,'index',handles.index(:,[zstart:zend]),'zdepth',handles.zdepth);

        assignin('base',sprintf('shift%s',strcat(num2str(c(4)),num2str(c(5)))),[xshift,yshift]);
        
    end


%% ---------------------------------------------------------------------------
    function pb_showmov_Callback(hObject,evendata)

        implay(handles.regimages);


    end
%% ---------------------------------------------------------------------------
    function pb_demo_Callback(hObject,evendata)

        scale = 1/str2num(cell2mat(get(handles.tb_pixelsize,{'string'}))); % nm/pixel converted to pixels/nm
        
        beginframe = str2num(cell2mat(get(handles.tb_begin,{'string'})));
        endframe = str2num(cell2mat(get(handles.tb_end,{'string'})));
        
        startstim = str2num(cell2mat(get(handles.tb_startstim,{'string'})))-beginframe+1;
        
        maskmin = (scale)*str2num(cell2mat(get(handles.tb_maskmin,{'string'}))) % Implement pixels/nm * nm to get mask size constraints
        maskmax = (scale)*str2num(cell2mat(get(handles.tb_maskmax,{'string'})))
        
        
        thresholding(mean(handles.regimages(:,:,[beginframe:startstim]),3),maskmin,maskmax,'ws','demo');

    end
%% ---------------------------------------------------------------------------
	function ch_xlsave_Callback(hObject,evendata)

        if get(hObject,'val') == 1
            
               prompt='Enter the name for the Excel file';
               name='Save output';

               handles.xlsfile=inputdlg(prompt,name);
               
        end


    end

%% ---------------------------------------------------------------------------

    function pb_countpuncta_Callback(hObject, evendata)
        global datestr
        global c
        
        scale = 1/str2num(cell2mat(get(handles.tb_pixelsize,{'string'}))); % nm/pixel converted to pixels/nm
        
        maskmin = (scale)*str2num(cell2mat(get(handles.tb_maskmin,{'string'}))) % Implement pixels/nm * nm to get mask size constraints
        maskmax = (scale)*str2num(cell2mat(get(handles.tb_maskmax,{'string'})))
        
        if exist('handles.regimages')==1
        
        puncta.countmask = thresholding(handles.regimages(:,:,handles.FrameStep),maskmin,maskmax)
        
        else
        
        puncta.countmask = thresholding(handles.rawimages(:,:,handles.FrameStep),maskmin,maskmax)
        
        end
        
        [B,L] = bwboundaries(puncta.countmask);
        
        assignin('base',sprintf('countmask%s',strcat(num2str(c(4)),num2str(c(5)))),puncta.countmask);
        assignin('base',sprintf('countmask%s',strcat(num2str(c(4)),num2str(c(5)))),puncta.countmask);
        
        figure; imshow(handles.rawimages(:,:,handles.FrameStep)); hold on; h= imshow(label2rgb(L)); set(h,'AlphaData',0.2);
        
        
    end

        
%% ---------------------------------------------------------------------------
    function pb_anl_Callback(hObject,evendata)

        global datestr
        global c
        
        cla(handles.axes11)
        % The parameters for GUIgetints come from the textboxes
        % 
        scale = 1/str2num(cell2mat(get(handles.tb_pixelsize,{'string'}))); % nm/pixel converted to pixels/nm
        beginframe = str2num(cell2mat(get(handles.tb_begin,{'string'})));
        % Previously endframe = str2num(cell2mat(get(handles.tb_end,{'string'})))-1;
        endframe = str2num(cell2mat(get(handles.tb_end,{'string'})));
        maskmin = (scale)*str2num(cell2mat(get(handles.tb_maskmin,{'string'}))); % Implement pixels/nm * nm to get mask size constraints
        maskmax = (scale)*str2num(cell2mat(get(handles.tb_maskmax,{'string'})));
        pcabegin = str2num(cell2mat(get(handles.tb_pcabegin,{'string'})))-beginframe+1;
        pcaend = str2num(cell2mat(get(handles.tb_pcaend,{'string'})))-beginframe+1;
        pcas = str2num(cell2mat(get(handles.tb_pcas,{'string'})));
        icut = str2num(cell2mat(get(handles.tb_icut,{'string'})));
        kgroups = str2num(cell2mat(get(handles.tb_kgroups,{'string'})));
        masklife = str2num(cell2mat(get(handles.tb_masklife,{'string'})));
        dropcriteria = str2num(cell2mat(get(handles.tb_dropcriteria,{'string'})));
        bgremove = get(handles.ch_bgremove,'value');
        blineremove = get(handles.ch_blineremove,'value');
        dropstart = str2num(cell2mat(get(handles.tb_dropstart,{'string'})));
        dropend = str2num(cell2mat(get(handles.tb_dropend,{'string'})));
        method = get(handles.pu_anlmethod,{'val'});
        method = cell2mat(method);
        
        
        startstim = str2num(cell2mat(get(handles.tb_startstim,{'string'})))-beginframe+1;
        

        corrcheck = get(handles.ch_corrcheck,'val');
            
        parameters = {'startstim',startstim,...
            'maskmin',maskmin,...
            'maskmax',maskmax,...
            'icut',icut,...
            'kgroups',kgroups,...
            'masklife',masklife,...
            'corrcheck',corrcheck,...
            'blineremove',blineremove,...
            'bgremove',bgremove,...
            'pcabegin',pcabegin,...
            'pcaend',pcaend,...
            'datestr',datestr,...
            'beginframe',beginframe,...
            'endframe',endframe,...
            'scale',scale,...
            'pcas',pcas,...
            'dropcriteria',dropcriteria,...
            'dropstart',dropstart,...
            'dropend',dropend,...
            'method',method};
            
        formatstr = '%s %1.2f\n';
        for i = 1:(size(parameters,2)-2)/2

                formatstr = strcat(formatstr,'%s %1.2f\n');

        end
        
        fprintf(formatstr,parameters{1:(size(parameters,2)-2)})
            
                    
        if get(handles.ch_xlsave,'val')==1
            parameters{end+1} = 'xlsave';
            parameters{end+1} = handles.xlsfile;
            
            filestr = strcat(cell2mat(handles.xlsfile),'Params',datestr,'.txt');
            
            formatstr = '%s %1.0f\n';
            
            for i = 1:(size(parameters,2)-2)/2
                
                formatstr = strcat(formatstr,'%s %1.0f\n');
                
            end
            
            fid = fopen(filestr,'wt+');
            fprintf(fid,'%s',handles.fname);
            fprintf(fid,formatstr,parameters{1:(size(parameters,2)-2)});

            fclose('all');
        end
        
        assignin('base',sprintf('parameters'),parameters);
        [ handles.puncta, handles.groups, handles.bg ] = GUIgetints(handles.regimages(:,:,[beginframe:endframe]),parameters);
        
        % Deleted totalkey from here % 
        
        analyze_c = fix(clock);
        
        assignin('base',sprintf('puncta%s',strcat(num2str(analyze_c(4)),num2str(analyze_c(5)))),handles.puncta);
        assignin('base',sprintf('groups%s',strcat(num2str(analyze_c(4)),num2str(analyze_c(5)))),handles.groups);
        assignin('base',sprintf('bg%s',strcat(num2str(analyze_c(4)),num2str(analyze_c(5)))),handles.bg);
        
        fprintf('Images index: %s',strcat(num2str(c(4)),num2str(c(5))));
        fprintf('Analysis index: %s',strcat(num2str(analyze_c(4)),num2str(analyze_c(5))));

        handles.currentplot = 1;
        
        handles.movmask = zeros(handles.xdim,handles.ydim,3,handles.frames); % Prepares an RGB image that also has a time dimension
        
        maskoverlay = zeros(handles.xdim,handles.ydim,3);
        
        for k = 1:3
            
            boundaryk = handles.puncta.bounds(handles.groups.total(:,5)==(k-1));
            
            for j = 1:numel(boundaryk);

                boundarykj = boundaryk{j};
                maskoverlay(:,:,k) = maskoverlay(:,:,k) + edge(poly2mask(boundarykj(:,2),boundarykj(:,1),handles.xdim,handles.ydim));

            end
            
        end
            
        for i = 1:endframe-beginframe+1
            
            handles.movmask(:,:,1,i) = (handles.regimages(:,:,i)) + maskoverlay(:,:,1);
            handles.movmask(:,:,2,i) = (handles.regimages(:,:,i)) + maskoverlay(:,:,2);
            handles.movmask(:,:,3,i) = (handles.regimages(:,:,i)) + maskoverlay(:,:,3);  
        end
        

% ---- NEW IMAGE PANELS -------------------------------------------------
        
    handles.plotpanel2 = uipanel( ...
			'Parent', handles.figure1, ...
			'Tag', 'displaypanel2', ...
			'Units', 'characters', ...
			'Position', [66 23 70 34], ...
			'FontName', 'Helvetica', ...
			'FontSize', 14, ...
			'Title', 'Display', ...
            'Visible', 'on');
        
    handles.axes12 = axes( ...
			'Parent', handles.plotpanel2, ...
			'Tag', 'axes11', ...
			'Units', 'characters', ...
			'Position', [5 2 60 28], ...
            'xtick',[], ...
            'ytick',[], ...
            'XGrid','on', ...
            'YGrid','on', ...
            'box','on');
        
    handles.axes13 = axes( ...
            'Parent', handles.plotpanel2, ...
            'Tag', 'axes11', ...
            'Units', 'characters', ...
            'Position', [75 2 60 28], ...
            'xtick',[], ...
            'ytick',[], ...
            'XGrid','on', ...
            'YGrid','on', ...
            'box','on');
        
% ---- NEW PUSH BUTTONS -------------------------------------------------
    

     handles.pb_showmovmask = uicontrol( ...
			'Parent', handles.analysispanel, ...
			'Tag', 'pb_showmovmask', ...
			'Style', 'pushbutton', ...
			'Units', 'characters', ...
			'Position', [15.6 1 20.5 3], ...
			'FontName', 'Helvetica', ...
			'FontSize', 10, ...
			'String', 'Movie with Masks', ...
			'Callback', @pb_showmovmask_Callback);

    
    end

%% ---------------------------------------------------------------------------
function pb_showmovmask_Callback(varargin) % frametype is a string variable that specifies which type of frame to modify

implay(handles.movmask)

end


%% ---------------------------------------------------------------------------
    function sl_call(varargin) % frametype is a string variable that specifies which type of frame to modify
        % Options include FrameStep, RegFrameStep, MaskFrameStep
    
    imagetype = handles.imagetype
        
       
    imshow(handles.(imagetype){handles.ztoanalyze}(:,:,ceil(get(h,'val'))),'Parent',axes);
    
    handles.(frametype) = ceil(get(h,'val'));    
    
    set(handles.FrameStepText,'string',num2str(handles.FrameStep));
    
    end
%% ---------------------------------------------------------------------------
    function fig_kpfcn(src,evnt,varargin) 

        imagetype = handles.imagetype;
                
            if strcmp(evnt.Key, 'rightarrow')==1
                try
                imshow(handles.(imagetype)(:,:,handles.FrameStep+1),'Parent',handles.axes11);

                handles.FrameStep = handles.FrameStep+1;
                catch
                end

            elseif strcmp(evnt.Key, 'leftarrow')==1 
                
                try
                imshow(handles.(imagetype)(:,:,handles.FrameStep-1),'Parent',handles.axes11);

                handles.FrameStep = handles.FrameStep-1;
                catch
                end
                
            elseif strcmp(evnt.Key, 'uparrow')==1 
                imshow(handles.(imagetype)(:,:,handles.FrameStep),'Parent',handles.axes11);

                handles.FrameStep = handles.FrameStep; 

                
            elseif strcmp(evnt.Key, 'downarrow')==1 
                imshow(handles.(imagetype)(:,:,handles.FrameStep),'Parent',handles.axes11);

                handles.FrameStep = handles.FrameStep; 
                %if exist('handles.lbl_text')==1 
                %    delete(handles.lbl_txt)
                %end
                    
                drawB(handles.puncta.bounds,handles.axes11);
            
            elseif strcmp(evnt.Key, 'k')==1 
                %imshow(handles.(imagetype)(:,:,handles.FrameStep),'Parent',handles.axes11);

                handles.FrameStep = handles.FrameStep; 
                %if exist('handles.lbl_text')==1 
                %    delete(handles.lbl_txt)
                %end
                    
                drawB(handles.puncta.bounds(handles.groups.agree{2}),handles.axes11,'color','g','labels',handles.groups.agree{2});
            
            elseif strcmp(evnt.Key, 'q')==1
                
                cla(handles.axes12);
                cla(handles.axes13);
                
                toplot = strcat(',',inputdlg('Puncta to plot'),',');
                numplots = cell2mat(strfind(toplot,','));
                
                if  isempty(numplots) == 0
                    
                    plotcolors = hsv(numel(numplots));

                    for i = 1:numel(numplots)-1
                        
                        dummy = (toplot{1}(numplots(i)+1:numplots(i+1)-1));
                        plot(handles.axes12,handles.puncta.norm_bgrem_int(:,str2double(dummy)),'linewidth',2,'color',plotcolors(i,:,:));
                        set(handles.axes12,'NextPlot','add','SelectionHighlight','off','XGrid','on','YGrid','on');
                        
                        if get(handles.ch_blineremove,'value') == 1

                        plot(handles.axes13,handles.puncta.norm_bgrem_intuncorr(:,str2double(dummy)),'linewidth',2,'color',plotcolors(i,:,:));
                        set(handles.axes13,'NextPlot','add','SelectionHighlight','off','XGrid','on','YGrid','on');
                        plot(handles.axes13,handles.puncta.yApprox(:,str2double(dummy)),'linewidth',2,'color',plotcolors(i,:,:));
                        set(handles.plotpanel2,'Position', [66 23 150 34]);
                    
                        end
                        
                        punctalegend = strcat(dummy,',',handles.groups.totalkey{str2double(dummy),1},',',handles.groups.totalkey{str2double(dummy),2});

                    
                    
                    end
                    
                    %set(handles.axes12,'SelectionHighlight','off','XGrid','on','YGrid','on')
                    %set(handles.axes13,'SelectionHighlight','off','XGrid','on','YGrid','on')
                    
                    
                    legendlabel = legend(handles.axes12,punctalegend);
                    % Move punctalegend off the plot
                    
                    temp_pos = get(legendlabel,'Position');
                    temp_pos(1) = temp_pos(1)+15;
                    set(legendlabel,'Position',temp_pos);
                end
                
            elseif strcmp(evnt.Key, 'w')==1
                
                try
                handles.currentplot = handles.currentplot-1;
                plotview;
                catch
                end
                
            elseif strcmp(evnt.Key, 'e') == 1
                
                try
                handles.currentplot = handles.currentplot+1;
                plotview;
                catch
                end
              
            end

            %set(handles.slider,'val',handles.FrameStep);

            set(handles.FrameStepText,'string',num2str(handles.FrameStep));

    end
%% ---------------------------------------------------------------------------
   
    function [] = drawB(boundaries,axis,varargin)
        
        
    color = cell2mat(varargin(1+find(strcmp([varargin],'color'))));
    if isempty(color)==1; color = 'y'; end;
    
    plabels = cell2mat(varargin(1+find(strcmp([varargin],'labels'))));
    if isempty(plabels)==1; plabels = [1:numel(boundaries)]; end;

        
              for i = 1:numel(boundaries);
                
                set(axis,'Selected','on','NextPlot','add'); hold on;
                boundaryi = boundaries{i}; %handles.puncta.bounds
                plot(axis,boundaryi(:,2),boundaryi(:,1),color);
                rndRow = ceil(length(boundaryi)/(mod(rand*i,7)+1));
                col = boundaryi(rndRow,2); row = boundaryi(rndRow,1);
                
                handles.lbl_txt = text(col+1, row-1, num2str(plabels(i)));
                set(handles.lbl_txt,'Color','r','FontSize',12,'Parent',axis);
                
              end
            
              
    end

%% ---------------------------------------------------------------------------
function [] = plotview()
        
handles.currentplot;

set(handles.axes12,'NextPlot','replace','SelectionHighlight','off','XGrid','on','YGrid','on');         
plot(handles.axes12,handles.puncta.norm_bgrem_int(:,handles.currentplot),'linewidth',2);
                
                
if get(handles.ch_blineremove,'value') == 1

    set(handles.plotpanel2,'Position', [66 23 150 34]);
    plot(handles.axes13,handles.puncta.norm_bgrem_intuncorr(:,handles.currentplot),'linewidth',2);
    set(handles.axes13,'NextPlot','add','SelectionHighlight','off','XGrid','on','YGrid','on')
    plot(handles.axes13,handles.puncta.yApprox(:,handles.currentplot),'linewidth',2);
    set(handles.axes13,'NextPlot','replace','SelectionHighlight','off','XGrid','on','YGrid','on');

end

punctalegend = strcat(num2str(handles.currentplot),',',handles.groups.totalkey{handles.currentplot,1},',',handles.groups.totalkey{handles.currentplot,2});
legendlabel = legend(handles.axes13,punctalegend);
% Move punctalegend off the plot

temp_pos = get(legendlabel,'Position');
temp_pos(1) = temp_pos(1)+15;
set(legendlabel,'Position',temp_pos);        
end

end
